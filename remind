#!/bin/sh

script_path=$(readlink --canonicalize "$0")
script_bin=$(dirname "${script_path}")
script_name=$(basename "${script_path}")

REMIND_ATQ=${REMIND_ATQ:-r}

msg_error() {
	if [ -t 1 ]; then
		printf "\e[31;1m${script_name}\e[22m: $@\e[0m\n" >&2
	else
		echo "${script_name}: $@" >&2
	fi
}

msg_ok() {
	if [ -t 1 ]; then
		printf "\e[32;1m${script_name}\e[22m: $@\e[0m\n"
	else
		echo "${script_name}: $@"
	fi
}

argc="$#"
command="$1"
message="$1"
op="$2"

# Display help if no parameters or help command
if [ $argc -eq 0 ] || [ "${command}" = "help" ] || [ "${command}" = "--help" ] \
		|| [ "${command}" = "-h" ]; then
	echo "COMMAND"
	echo "    remind MESSAGE TIMEâ€¦"
	echo "    remind COMMAND"
	echo
	echo "DESCRIPTION"
	echo "    Displays notification at specified time"
	echo
	echo "EXAMPLES"
	echo '    remind "Hi there" now'
	echo '    remind "Time to wake up" in 5 minutes'
	echo '    remind "Dinner" in 1 hour'
	echo '    remind "Take a break" at noon'
	echo '    remind "Are you ready?" at 13:00'
	echo '    remind list'
	echo '    remind clear'
	echo '    remind help'
	echo
	exit
fi

# Run commands: list, clear
if [ ${argc} -eq 1 ]; then
	if [ "${command}" = "list" ]; then
		at "-q${REMIND_ATQ}" -l
	elif [ "${command}" = "clear" ]; then
		at "-q${REMIND_ATQ}" -r "$(atq | cut -f1)"
	else
		echo "${script_name}: ${command}: Unknown command"
		echo "Type 'remind' without any parameters to see the syntax."
		exit 1
	fi

	exit
fi

shift 2
when="$*"

# Determine time of notification
if [ "$op" = "in" ]; then
	time="now + $when"
elif [ "$op" = "at" ]; then
	time="$when"
elif [ "$op" = "now" ]; then
	time="now"
else
	msg_error "Invalid time operator '$op'"
	exit 1
fi

# Schedule the notification
if ! echo "notify-send 'Reminder' '${message}' -u critical" \
		| at "-q${REMIND_ATQ}" "${time}" 2>/dev/null; then
	msg_error "'at ${time}' failed, time specification is probably invalid"
	exit 1
fi

msg_ok "Notification scheduled at ${time}"
